import { Component, OnInit } from '@angular/core';
import { GenericService } from '../../services/generic.service';
import Swal from 'sweetalert2';
import { Router } from '@angular/router';
declare let alertify: any;

@Component({
  selector: 'app-mantenimiento',
  templateUrl: './mantenimiento.component.html',
  styleUrls: ['./mantenimiento.component.css']
})
export class MantenimientoComponent implements OnInit {

  // Fecha (Generated by the backend)
  public equipo: string;
  public nroequipo: string;
  public motivo: string;
  public correas: string;
  public limpieza: string;
  public mangueras: string;
  public engrase: string;
  public lubricacion: string;
  public accesorios: string;
  public conexiones: string;
  public tableros: string;
  public cortes: string;
  public observaciones: string;
  public fecha: any;
  public proxrevision: any;
  public usuario: string;

  constructor(private genericService: GenericService, private route: Router,) {
    let user_role = localStorage.getItem("user_role");
    if (user_role != "ADMIN_ROL" && user_role != "MANTENIMIENTO") {
      alert("Acceso no autorizado !")
      route.navigate(['inicio'])
    }
  }

  ngOnInit(): void {
  }

  enviarMant() {

    let Hoy = new Date()                                  // para que no ingresen fecha menor al dia de trabajo
    let Hoy2 = Hoy.toISOString().split('T')[0];
    let balanzas = this.sumarDias(Hoy, 180);              // balanzas y basculas se calibran cada 6 meses
    let balanzas2 = balanzas.toISOString().split('T')[0];
    let general = this.sumarDias(Hoy, 30);                // el resto se calibra cada mes
    let general2 = general.toISOString().split('T')[0];
    let torre = this.sumarDias(Hoy, 360);              // torre destilacion se calibran cada 12 meses
    let torre3 = torre.toISOString().split('T')[0];

    if (this.equipo == 'BAL') {
      this.proxrevision = balanzas2;
    }

    // if (this.equipo == 'BAL' && this.nroequipo.includes('Balanza',0)) {        *** en caso de querer dividir balanzas de basculas
    //   this.proxrevision = general2;
    // }

    if (this.equipo != 'BAL') {
      this.proxrevision = general2;
    }

    if (this.equipo == 'VAR' && this.nroequipo == 'Extractor polvo') {
      this.proxrevision = balanzas2;
    }
    
    if (this.equipo == 'VAR' && this.nroequipo == 'Paletizadora') {
      this.proxrevision = balanzas2;
    }

    if (this.equipo == 'VAR' && this.nroequipo == 'Destilador') {
      this.proxrevision = torre3;
    }

    if (!this.observaciones && this.equipo == 'BAL') {
      return alertify.error("HAY QUE COMPLETAR ALGUNOS DATOS");
    }

    if (!this.limpieza && this.equipo != 'BAL') {
      return alertify.error("HAY QUE COMPLETAR ALGUNOS DATOS");
    }

    let data = {
      equipo: this.equipo,
      nroequipo: this.nroequipo,
      motivo: this.motivo,
      correas: this.correas,
      limpieza: this.limpieza,
      mangueras: this.mangueras,
      engrase: this.engrase,
      lubricacion: this.lubricacion,
      accesorios: this.accesorios,
      conexiones: this.conexiones,
      tableros: this.tableros,
      cortes: this.cortes,
      observaciones: this.observaciones,
      fecha: this.fecha,
      proxrevision: this.proxrevision,
      usuario: localStorage.getItem("username"),
    };

    this.genericService.agregarMantenimiento(data)
      .subscribe((data: any) => {
        this.resetear();
        return alertify.success("¡ Mantenimiento registrado correctamente !");
      }, err => {
        console.log(err);
      })
  }

  resetear() {
    this.equipo = null;
    this.nroequipo = null;
    this.motivo = null;
    this.correas = null;
    this.limpieza = null;
    this.mangueras = null;
    this.engrase = null;
    this.lubricacion = null;
    this.accesorios = null;
    this.conexiones = null;
    this.tableros = null;
    this.cortes = null;
    this.observaciones = null;
    this.fecha = null;
    this.proxrevision = null;
    this.usuario = null;

  }

  /* Función que suma o resta días a una fecha, si el parámetro
 días es negativo restará los días*/
  sumarDias(date, days) {
    var res = new Date(date);
    res.setDate(res.getDate() + days);
    return res;
  }



}
